##
# Global settings block
# This block is used to define global settings for the servers
#   * worker_processes: Define the number of worker processes
##

# !!Consider in our project we don't need to support complex features of event
# !!So I propose to remove the event block and keep the worker_processes and worker_connections in the global block

# Define the number of worker processes, default is 1
worker_processes 1;

# Define the number of connections, default is 1024
worker_connections 1024;

##
# HTTP block
# This block is used to define the server settings
##
http {
    ##
    # HTTP global settings block
    # This block is used to define global settings for the servers
    ##

    # !!The subject didn't mention about how flexible the limit of the request body size should be (e.g. server block, location block, etc.)
    # !!So I propose to define the max request body size only in the http global block
    # Define the max request body size, default is 1M
    client_max_body_size 1M;

    # Define the default http request content type for all the servers, e.g. text/html, text/plain, application/json, etc.
    default_type text/html;

    # Define the error page for the all the servers
    error_page 404 /404.html;
    error_page 500 /50x.html;
    error_page 502 /50x.html;
    error_page 503 /50x.html;
    error_page 504 /50x.html;
    error_page 403 /403.html;
    error_page 401 /401.html;

    ##
    # Server block
    # This block is used to define the server settings
    ##
    server {
        ##
        # Server global settings block
        ##

        # Define the `error level` log file path for the server
        error_log log/error.log error;
        # Define the `info level` log file path for the server
        error_log log/info.log info;

        # Define the max time for keepalive connections, default is 65 seconds
        keepalive_timeout 65;

        # Define the server name, default is localhost
        server_name example1.com;

        # Define the listen IP address and port number for the server
        listen 192.168.1.100:80;

        # This block is used to define the root directory of the server
        location {
            route /;
            # The routing can only accept GET and POST requests, other requests will be rejected
            limit_except GET POST;

            # Define the root directory of the server
            root /var/www/html;

            # Set a default file to answer if the request is a directory
            # !!I propose to use index.html as the default file to answer if the request is a directory
            # !!If the index.html file is not found, the server will return a 404 error
            # !!index will only support to config one file (nginx can config multiple files)
            index default.html;
        }

        # This block is used to define the redirection of the old page to the new page
        location {
            route /old-page;
            redirect http://example.com/new-page;
        }

        # Turn on the upload feature and save the file under folder: /upload
        location {
            route /upload;
            enable_upload on;
            upload_path /upload;request
        }

        location {
            route /private;
            # Turn off the directory listing, default is on
            autoindex off;
            root /var/www/html/private;

            # !!Limit the CGI execution only to the .py files
            # !!For security reasons, I propose to limit the CGI execution in each location block
            cgi_extension .py;
            cgi_path /cgi-bin;
        }
    }
}


